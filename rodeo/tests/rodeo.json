{
  "versions": [
    1.46,
    1.45,
    1.44,
    1.43
  ],
  "inventory": [
    {
      "source": "tests/inventory/all.json",
      "register": "all"
    },
    {
      "source": "tests/inventory/alpine.json",
      "register": "alpine"
    },
    {
      "source": "tests/inventory/api.json",
      "register": "api"
    },
    {
      "source": "tests/inventory/bash.json",
      "register": "bash"
    },
    {
      "source": "tests/inventory/builder.json",
      "register": "builder"
    },
    {
      "source": "tests/inventory/buildkit.json",
      "register": "buildkit"
    },
    {
      "source": "tests/inventory/carpenter.json",
      "register": "carpenter"
    },
    {
      "source": "tests/inventory/carpenter/relay.json",
      "register": "carpenterrelay"
    },
    {
      "source": "tests/inventory/carpenter/runner.json",
      "register": "carpenterrunner"
    },
    {
      "source": "tests/inventory/controller.json",
      "register": "controller"
    },
    {
      "source": "tests/inventory/dependencies.json",
      "register": "dependencies"
    },
    {
      "source": "tests/inventory/docker.json",
      "register": "docker"
    },
    {
      "source": "tests/inventory/dockle.json",
      "register": "dockle"
    },
    {
      "source": "tests/inventory/editor.json",
      "register": "editor"
    },
    {
      "source": "tests/inventory/entrypoint.json",
      "register": "entrypoint"
    },
    {
      "source": "tests/inventory/entrypoint/alpine.json",
      "register": "entrypointalpine"
    },
    {
      "source": "tests/inventory/entrypoint/bash.json",
      "register": "entrypointbash"
    },
    {
      "source": "tests/inventory/explorer.json",
      "register": "explorer"
    },
    {
      "source": "tests/inventory/explorers/shell.json",
      "register": "explorershell"
    },
    {
      "source": "tests/inventory/explorers/zig.json",
      "register": "explorerzig"
    },
    {
      "source": "tests/inventory/figlet.json",
      "register": "figlet"
    },
    {
      "source": "tests/inventory/git.json",
      "register": "git"
    },
    {
      "source": "tests/inventory/gpu.json",
      "register": "gpu"
    },
    {
      "source": "tests/inventory/http.json",
      "register": "http"
    },
    {
      "source": "tests/inventory/jumper.json",
      "register": "jumper"
    },
    {
      "source": "tests/inventory/linguist.json",
      "register": "linguist"
    },
    {
      "source": "tests/inventory/listener.json",
      "register": "listener"
    },
    {
      "source": "tests/inventory/man.json",
      "register": "man"
    },
    {
      "source": "tests/inventory/networks.json",
      "register": "networks"
    },
    {
      "source": "tests/inventory/nginx.json",
      "register": "nginx"
    },
    {
      "source": "tests/inventory/pass.json",
      "register": "pass"
    },
    {
      "source": "tests/inventory/project.json",
      "register": "project"
    },
    {
      "source": "tests/inventory/registry.json",
      "register": "registry"
    },
    {
      "source": "tests/inventory/relay.json",
      "register": "relay"
    },
    {
      "source": "tests/inventory/rules.json",
      "register": "rules"
    },
    {
      "source": "tests/inventory/runner.json",
      "register": "runner"
    },
    {
      "source": "tests/inventory/safedeposit.json",
      "register": "safedeposit"
    },
    {
      "source": "tests/inventory/scholar.json",
      "register": "scholar"
    },
    {
      "source": "tests/inventory/shell.json",
      "register": "shell"
    },
    {
      "source": "tests/inventory/socat.json",
      "register": "socat"
    },
    {
      "source": "tests/inventory/socket-proxy.json",
      "register": "socketproxy"
    },
    {
      "source": "tests/inventory/spaceporn.json",
      "register": "spaceporn"
    },
    {
      "source": "tests/inventory/spaceporn/relay.json",
      "register": "spacepornrelay"
    },
    {
      "source": "tests/inventory/spaceporn/runner.json",
      "register": "spacepornrunner"
    },
    {
      "source": "tests/inventory/spectrwm.json",
      "register": "spectrwm"
    },
    {
      "source": "tests/inventory/sshd.json",
      "register": "sshd"
    },
    {
      "source": "tests/inventory/tmux.json",
      "register": "tmux"
    },
    {
      "source": "tests/inventory/vim.json",
      "register": "vim"
    },
    {
      "source": "tests/inventory/volumes.json",
      "register": "volumes"
    },
    {
      "source": "tests/inventory/workspaces.json",
      "register": "workspaces"
    },
    {
      "source": "tests/inventory/xserver.json",
      "register": "xserver"
    },
    {
      "source": "tests/inventory/zig.json",
      "register": "zig"
    }
  ],
  "include": [
    "networks/create.yaml",
    "volumes/create.yaml",
    "images/pull.yaml",
    "images/tag.yaml",
    "images/build.yaml",
    "containers/create.yaml",
    "containers/start.yaml",
    "containers/attach.yaml",
    "containers/cleanup.yaml",
    "volumes/cleanup.yaml",
    "networks/cleanup.yaml"
  ],
  "rules": [
    {
      "id": "{{ $rules.up }}",
      "description": "Create and start containers, volumes and networks"
    },
    {
      "id": "{{ $rules.down }}",
      "description": "Stop and remove containers, volumes and networks"
    }
  ]
}
