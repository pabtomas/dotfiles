'-'   -> go for it
'?'   -> go for it but adjust the need to the V2 proposition
'??'  -> go for it but not now
'???' -> obsolete

V1:
-   .bash_aliases: remove unused aliases
??? .bash_aliases: show aliases + description
??? .vimrc: use systemd.path
-   .vimrc: unsource .vimrc
-   .vimrc: toggle set paste
-   .vimrc: toggle hightlight search
-   .vimrc: remap
-   .vimrc: search and replace: use "%V" 2 times
??  .vimrc: vim9script
?   .vimrc + .tmux.conf + NERDtree: mapping to open/close tree pane
?   .tmux.conf: save & restore bash history for each pane
??? .tmux.conf: fix pane title between sessions
??  .tmux.conf: add keybinding to change color theme

V2:
rename dotfiles -> workspace
- rm deploy_setup.sh
- process:
  - wget the wget_me.sh script
  - run the wget_me.sh script:
    - update + upgrade + automemove/purge
    - if Docker not installed:
      - install Docker + min (or another modern minimal web browser)
    - else:
      - update Docker + min (or another modern minimal web browser)
    - add host docker config
    - pull docker-git image
    - run docker-git container
    - pull workspace git repo
    - pull latest workspace images from registry
    - docker compose create + start into workspace git repo
    - remove workspace git repo
    - docker attach jumper (no ssh)
    - stop + rm all containers
    - rm all containers
    - docker prune everything EXCEPT VOLUMES
- new compose.yaml file:
  - 1 dir = 1 ALPINE Dockerfile = 1 service:
    - editor (& cloner ?):
      - VIM + git + tig + ripgrep OK
      - volumes:
        - 1 shared with controller for workspace git repo
        - 1 each git repo shared with matching runner
    - drawer:
      - figlet/lolcat/tui monitoring/xinetd/socat + service network
    - notetaker:
      - hedgedoc
    - safedeposit:
      - passwordstore + git + gpg
      - exclusive clone on a volume
    - jlesage/docker-firefox
    - pro: aliases/packages for pro usage
- jlesage/docker-baseimage-gui based images working with min
- update Dockerfiles + images with bot
  - templating for Dockerfiles
  - templating for compose.yaml
- Add a directory for components: 1 Dockerfile = 1 component and use it for multistaging
- Add a directory for runners: 1 Dockerfile = 1 runner

-------------------------------------------------------------------------------
$ cat /etc/swanctl/conf.d/ecureuil.conf
[...]
        children {
            exclusion {
                remote_ts = 172.17.0.0/16
                mode = pass
                dpd_action = restart
                start_action = trap
            }
-------------------------------------------------------------------------------

proposition:
  workspaces
  ├── compose.yaml/templated
  ├── dotfiles
  │   ├── .bashrc
  │   ├── .tmux.conf
  │   └── .vimrc
  ├── .github/workflows/bot.yml
  ├── host
  │   ├── .bashrc
  │   ├── wget_me.sh
  │   └── prompt.sh
  ├── jumper/controller/editor/safedeposit/pro/drawer
  │   └── Dockerfile/templated
  ├── components
  │   ├── compose.yaml/templated
  │   └── git/tig/ripgrep/vim/tmux/zig
  │       └── Dockerfile/templated
  └── runners
      └── spaceporn
          └── Dockerfile/compose.yaml/templates
