---

run:
  - endpoint: /build
    method: POST
    loop:
      - id: '{{ $dependencies.images.build.virtual._ }}'
        virtual: true
        query:
          nocache: false
          buildargs:
            HTTP_PROXY: '{{ if (and (has .Env "http_proxy") (.Env.http_proxy)) }}{{ .Env.http_proxy }}{{ else if (and (has .Env "HTTP_PROXY") (.Env.HTTP_PROXY)) }}{{ .Env.HTTP_PROXY }}{{ end }}'
            HTTPS_PROXY: '{{ if (and (has .Env "https_proxy") (.Env.https_proxy)) }}{{ .Env.https_proxy }}{{ else if (and (has .Env "HTTPS_PROXY") (.Env.HTTPS_PROXY)) }}{{ .Env.HTTPS_PROXY }}{{ end }}'
          dockerfile: Dockerfile
      - id: '{{ $dependencies.images.build.virtual.entrypoint }}'
        virtual: true
        query:
          buildargs:
            CHECK_ENTRYPOINT_PATH: '{{ $entrypoint.path.check.sh }}'
            CHECK_ENTRYPOINTD_PATH: '{{ $entrypoint.path.check.d }}'
            ENTRYPOINT_PATH: '{{ $entrypoint.path.entrypoint.sh }}'
            ENTRYPOINTD_PATH: '{{ $entrypoint.path.entrypoint.d }}'
        context: '{{ $all.path.dockerfiles }}/{{ $entrypoint.id }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'
      - id: '{{ $dependencies.images.build.virtual.alpine.entrypoint }}'
        virtual: true
        query:
          buildargs:
            ENTRYPOINT_LAYER_IMG: '{{ $entrypointalpine.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}'
        depends_on:
          - '{{ $dependencies.images.build.alpine.entrypoint }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'
      - id: '{{ $dependencies.images.build.virtual.bash }}'
        virtual: true
        query:
          buildargs:
            BASH_LAYER_IMG: '{{ $bash.image.layer }}{{ $all.sep.tag }}{{ $all.owner.tag }}'
        depends_on:
          - '{{ $dependencies.images.build.bash._ }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'
      - id: '{{ $dependencies.images.build.virtual.workspaces }}'
        virtual: true
        query:
          buildargs:
            WORKSPACES_LAYER_IMG: '{{ $workspaces.image.layer }}{{ $all.sep.tag }}{{ $all.owner.tag }}'
        depends_on:
          - '{{ $dependencies.images.build.workspaces }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'
      - id: '{{ $dependencies.images.build.virtual.sshd }}'
        virtual: true
        query:
          buildargs:
            SSHD_LAYER_IMG: '{{ $sshd.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}'
        depends_on:
          - '{{ $dependencies.images.build.sshd }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'
      - id: '{{ $dependencies.images.build.virtual.git }}'
        virtual: true
        query:
          buildargs:
            GIT_LAYER_IMG: '{{ $git.yaml").image }}{{ $all.sep.tag }}{{ $all.owner.tag }}'
        depends_on:
          - '{{ $dependencies.images.build.git }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'
      - id: '{{ $dependencies.images.build.virtual.nginx }}'
        virtual: true
        query:
          buildargs:
            NGINX_LAYER_IMG: '{{ $nginx.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}'
        depends_on:
          - '{{ $dependencies.images.build.nginx }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'
      - id: '{{ $dependencies.images.build.virtual.relay }}'
        virtual: true
        query:
          buildargs:
            ENTRYPOINTD_PATH: '{{ $entrypoint.path.entrypoint.d }}'
            SOCAT_LAYER_IMG: '{{ $socat.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}'
            TMP_XSERVER_SOCKETS_PATH: '{{ $xserver.path.sockets }}'
            XSERVER_IP: '{{ $xserver.ip }}'
            XSERVER_PORT: '{{ $xserver.port }}'
        context: '{{ $all.path.dockerfiles }}/{{ $relay.id }}'
        depends_on:
          - '{{ $dependencies.images.build.socat }}'
        extends:
          - '{{ $dependencies.images.build.virtual._ }}'

...
