---

run:
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/alpine.yaml").image.source }}":true}}'
      as:
        id: local.alpine.image.json
        scope: images.pull.alpine
  - if: '{{ ne 1 (len (datasource "local.alpine.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.alpine
        query:
          fromImage: {{ (datasource "datasources/alpine.yaml").image.source }}
          tag: {{ (datasource "datasources/alpine.yaml").tag }}
        depends_on:
          - local.alpine.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/bash.yaml").image.source }}":true}}'
      as:
        id: local.bash.image.json
        scope: images.pull.bash.
  - if: '{{ ne 1 (len (datasource "local.bash.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.bash
        query:
          fromImage: {{ (datasource "datasources/bash.yaml").image.source }}
          tag: {{ (datasource "datasources/bash.yaml").tag }}
        depends_on:
          - local.bash.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/buildkit.yaml").image.source }}":true}}'
      as:
        id: local.buildkit.image.json
        scope: images.pull.buildkit
  - if: '{{ ne 1 (len (datasource "local.buildkit.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.buildkit
        query:
          fromImage: {{ (datasource "datasources/buildkit.yaml").image.source }}
          tag: {{ (datasource "datasources/buildkit.yaml").tag }}
        depends_on:
          - local.buildkit.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/docker.yaml").image.source }}":true}}'
      as:
        id: local.docker.image.json
        scope: images.pull.docker
  - if: '{{ ne 1 (len (datasource "local.docker.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.docker
        query:
          fromImage: {{ (datasource "datasources/docker.yaml").image.source }}
          tag: {{ (datasource "datasources/docker.yaml").tag }}
        depends_on:
          - local.docker.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/socket-proxy.yaml").linuxserver.image.source }}":true}}'
      as:
        id: local.proxy.image.json
        scope: images.pull.proxy
  - if: '{{ ne 1 (len (datasource "local.proxy.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.proxy
        query:
          fromImage: {{ (datasource "datasources/socket-proxy.yaml").linuxserver.image.source }}
          tag: {{ (datasource "datasources/socket-proxy.yaml").linuxserver.tag }}
        depends_on:
          - local.proxy.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/registry.yaml").image.source }}":true}}'
      as:
        id: local.registry.image.json
        scope: images.pull.registry
  - if: '{{ ne 1 (len (datasource "local.registry.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.registry
        query:
          fromImage: {{ (datasource "datasources/registry.yaml").image.source }}
          tag: {{ (datasource "datasources/registry.yaml").tag }}
        depends_on:
          - local.registry.image.json

...
