---

run:
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ $alpine.image.source }}":true}}'
      as:
        id: localalpineimage
        scope: images.pull.alpine
  - if: '{{ ne 1 (len $localalpineimage) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.alpine
        query:
          fromImage: '{{ $alpine.image.source }}'
          tag: '{{ $alpine.tag }}'
        depends_on:
          - localalpineimage
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ $bash.image.source }}":true}}'
      as:
        id: localbashimage
        scope: images.pull.bash.
  - if: {{ ne 1 (len $localbashimage) }}
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.bash
        query:
          fromImage: '{{ $bash.image.source }}'
          tag: '{{ $bash.tag }}'
        depends_on:
          - localbashimage
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ $buildkit.image.source }}":true}}'
      as:
        id: localbuildkitimage
        scope: images.pull.buildkit
  - if: {{ ne 1 (len $localbuildkitimage) }}
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.buildkit
        query:
          fromImage: '{{ $buildkit.image.source }}'
          tag: '{{ $buildkit.tag }}'
        depends_on:
          - localbuildkitimage
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ $docker.image.source }}":true}}'
      as:
        id: localdockerimage
        scope: images.pull.docker
  - if: {{ ne 1 (len $localdockerimage) }}
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.docker
        query:
          fromImage: '{{ $docker.image.source }}'
          tag: '{{ $docker.tag }}'
        depends_on:
          - localdockerimage
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ $socketproxy.linuxserver.image.source }}":true}}'
      as:
        id: localproxyimage
        scope: images.pull.proxy
  - if: {{ ne 1 (len $localproxyimage) }}
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.proxy
        query:
          fromImage: '{{ $socketproxy.linuxserver.image.source }}'
          tag: '{{ $socketproxy.linuxserver.tag }}'
        depends_on:
          - localproxyimage
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ $registry.image.source }}":true}}'
      as:
        id: localregistryimage
        scope: images.pull.registry
  - if: {{ ne 1 (len $localregistryimage) }}
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.registry
        query:
          fromImage: '{{ $registry.image.source }}'
          tag: '{{ $registry.tag }}'
        depends_on:
          - localregistryimage

...
