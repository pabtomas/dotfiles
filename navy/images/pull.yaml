---

tasks:
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/images.yaml").alpine }}":true}}'
      as:
        id: local.alpine.image.json
        scope: images.pull.alpine
  - if: '{{ ne 1 (len (datasource "local.alpine.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.alpine
        query:
          fromImage: ${ALPINE_IMG}
          tag: ${ALPINE_TAG}
        depends_on:
          - local.alpine.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/images.yaml").bash }}":true}}'
      as:
        id: local.bash.image.json
        scope: images.pull.bash.
  - if: '{{ ne 1 (len (datasource "local.bash.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.bash
        query:
          fromImage: ${BASH_IMG}
          tag: ${BASH_TAG}
        depends_on:
          - local.bash.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/images.yaml").buildkit }}":true}}'
      as:
        id: local.buildkit.image.json
        scope: images.pull.buildkit
  - if: '{{ ne 1 (len (datasource "local.buildkit.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.buildkit
        query:
          fromImage: ${_BUILDKIT_IMG}
          tag: ${_BUILDKIT_TAG}
        depends_on:
          - local.buildkit.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/images.yaml").docker }}":true}}'
      as:
        id: local.docker.image.json
        scope: images.pull.docker
  - if: '{{ ne 1 (len (datasource "local.docker.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.docker
        query:
          fromImage: ${_DOCKER_IMG}
          tag: ${_DOCKER_TAG}
        depends_on:
          - local.docker.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/images.yaml").proxy }}":true}}'
      as:
        id: local.proxy.image.json
        scope: images.pull.proxy
  - if: '{{ ne 1 (len (datasource "local.proxy.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.proxy
        query:
          fromImage: ${LINUXSERVER_PROXY_IMG}
          tag: ${LINUXSERVER_PROXY_TAG}
        depends_on:
          - local.proxy.image.json
  - endpoint: /images/json
    method: GET
    register:
      query:
        filters: '{"reference":{"{{ (datasource "datasources/images.yaml").registry }}":true}}'
      as:
        id: local.registry.image.json
        scope: images.pull.registry
  - if: '{{ ne 1 (len (datasource "local.registry.image.json")) }}'
    endpoint: /images/create
    method: POST
    loop:
      - id: images.pull.registry
        query:
          fromImage: ${REGISTRY_IMG}
          tag: ${REGISTRY_TAG}
        depends_on:
          - local.registry.image.json

...
