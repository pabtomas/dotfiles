---

run:
  - endpoint: /networks
    method: GET
    register:
      as:
        id: registernetworks
        scope: networks.create.*
  - if: '{{ $net := coll.Slice }}{{ range $registernetworks }}{{ $net = $net | append .Name }}{{ end }}
      {{ or (not (has $net $networks.docker_utils.name))
            (not (has $net $networks.proxified_docker_socket.name))
            (not (has $net $networks.proxified_xserver_socket.name))
            (not (has $net $networks.jum_area.name)) }}'
    endpoint: /networks/create
    method: POST
    loop:
      - id: networks.create.virtual
        virtual: true
        query:
          Driver: bridge
          IPAM:
            Driver: default
          Labels:
            navy: true
        depends_on:
          - networks.json
      - id: 'networks.create.{{ $networks.docker_utils.name }}'
        query:
          Name: '{{ $networks.docker_utils.name }}'
          IPAM:
            Config:
              - Subnet: '{{ $networks.docker_utils.subnet }}'
                IPRange: '{{ $networks.docker_utils.subnet }}'
                Gateway: '{{ $networks.docker_utils.gateway.ip }}'
        extends:
          - networks.create.virtual
      - id: 'networks.create.{{ $networks.jump_area.name }}'
        query:
          Name: '{{ $networks.jump_area.name }}'
          IPAM:
            Config:
              - Subnet: '{{ $networks.jump_area.subnet }}'
                IPRange: '{{ $networks.jump_area.subnet }}'
                Gateway: '{{ $networks.jump_area.gateway.ip }}'
        extends:
          - networks.create.virtual
      - id: 'networks.create.{{ $networks.proxified_docker_socket.name }}'
        query:
          Name: '{{ $networks.proxified_docker_socket.name }}'
          IPAM:
            Config:
              - Subnet: '{{ $networks.proxified_docker_socket.subnet }}'
                IPRange: '{{ $networks.proxified_docker_socket.subnet }}'
                Gateway: '{{ $networks.proxified_docker_socket.gateway.ip }}'
        extends:
          - networks.create.virtual
      - id: 'networks.create.{{ $networks.proxified_xserver_socket.name }}'
        query:
          Name: '{{ $networks.proxified_xserver_socket.name }}'
          IPAM:
            Config:
              - Subnet: '{{ $networks.proxified_xserver_socket.subnet }}'
                IPRange: '{{ $networks.proxified_xserver_socket.subnet }}'
                Gateway: '{{ $networks.proxified_xserver_socket.gateway.ip }}'
        extends:
          - networks.create.virtual

...
