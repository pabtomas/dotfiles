---

rules:
  - id: '{{ $rules.up }}'
    run:
      - endpoint: /networks
        method: GET
        register:
          id: networks.json
          as:
            id: registernetworks
            scope: '{{ $dependencies.prefix.networks.create }}*'
      - if: '{{ $net := coll.Slice }}{{ range $registernetworks }}{{ $net = $net | append .Name }}{{ end }}
          {{ or (not (has $net $networks.docker_utils.name))
                (not (has $net $networks.proxified_docker_socket.name))
                (not (has $net $networks.proxified_xserver_socket.name))
                (not (has $net $networks.jum_area.name)) }}'
        endpoint: /networks/create
        method: POST
        loop:
          - id: '{{ $dependencies.networks.create.virtual }}'
            virtual: true
            query:
              Driver: bridge
              IPAM:
                Driver: default
              Labels:
                navy: '{{ $project.id }}'
            depends_on:
              - networks.json
          - id: '{{ $dependencies.networks.create.docker_utils }}'
            query:
              Name: '{{ $networks.docker_utils.name }}'
              IPAM:
                Config:
                  - Subnet: '{{ $networks.docker_utils.subnet }}'
                    IPRange: '{{ $networks.docker_utils.subnet }}'
                    Gateway: '{{ $networks.docker_utils.gateway.ip }}'
            extends:
              - '{{ $dependencies.networks.create.virtual }}'
          - id: '{{ $dependencies.networks.create.jump_area }}'
            query:
              Name: '{{ $networks.jump_area.name }}'
              IPAM:
                Config:
                  - Subnet: '{{ $networks.jump_area.subnet }}'
                    IPRange: '{{ $networks.jump_area.subnet }}'
                    Gateway: '{{ $networks.jump_area.gateway.ip }}'
            extends:
              - '{{ $dependencies.networks.create.virtual }}'
          - id: '{{ $dependencies.networks.create.proxified_docker_socket }}'
            query:
              Name: '{{ $networks.proxified_docker_socket.name }}'
              IPAM:
                Config:
                  - Subnet: '{{ $networks.proxified_docker_socket.subnet }}'
                    IPRange: '{{ $networks.proxified_docker_socket.subnet }}'
                    Gateway: '{{ $networks.proxified_docker_socket.gateway.ip }}'
            extends:
              - '{{ $dependencies.networks.create.virtual }}'
          - id: '{{ $dependencies.networks.create.proxified_xserver_socket }}'
            query:
              Name: '{{ $networks.proxified_xserver_socket.name }}'
              IPAM:
                Config:
                  - Subnet: '{{ $networks.proxified_xserver_socket.subnet }}'
                    IPRange: '{{ $networks.proxified_xserver_socket.subnet }}'
                    Gateway: '{{ $networks.proxified_xserver_socket.gateway.ip }}'
            extends:
              - '{{ $dependencies.networks.create.virtual }}'

...
