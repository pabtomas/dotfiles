---

run:
  - endpoint: /containers/create
    method: POST
    loop:
      - id: containers.create.virtual.base
        virtual: true
        query:
          HostConfig:
            Privileged: false
          Labels:
            navy: true
      - id: containers.create.virtual.docker
        virtual: true
        query:
          Image: {{ (datasource "datasources/docker.yaml").image.layer }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
          NetworkingConfig:
            EndpointsConfig:
              {{ (datasource "datasources/networks.yaml").docker_utils.name }}: {}
              {{ (datasource "datasources/networks.yaml").proxified_docker_socket.name }}: {}
        depends_on:
          - images.build.docker
          - networks.create.{{ (datasource "datasources/networks.yaml").docker_utils.name }}
          - networks.create.{{ (datasource "datasources/networks.yaml").proxified_docker_socket.name }}
        extends:
          - containers.create.virtual.base
      - id: containers.create.virtual.isolated
        virtual: true
        query:
          HostConfig:
            NetworkMode: none
        extends:
          - containers.create.virtual.base
      - id: containers.create.virtual.gpu
        virtual: true
        query:
          Image: {{ (datasource "datasources/gpu.yaml").image }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
          Devices:
            - PathOnHost: {{ (datasource "datasources/gpu.yaml").path.dev.gpu }}
              PathInContainer: {{ (datasource "datasources/gpu.yaml").path.dev.gpu }}
              CgroupPermissions: rwm
            - PathOnHost: {{ (datasource "datasources/gpu.yaml").path.dev.vga }}
              PathInContainer: {{ (datasource "datasources/gpu.yaml").path.dev.vga }}
              CgroupPermissions: rwm
          GroupAdd:
            - render
            - video
        depends_on:
          - images.build.gpu
        extends:
          - containers.create.virtual.base
      - id: containers.create.virtual.man
        virtual: true
        query:
          Image: {{ (datasource "datasources/man.yaml").image }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
        depends_on:
          - images.build.man
        extends:
          - containers.create.virtual.sshd
      - id: containers.create.virtual.pass
        virtual: true
        query:
          Image: {{ (datasource "datasources/pass.yaml").image }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
        depends_on:
          - images.build.pass
        extends:
          - containers.create.virtual.sshd
      - id: containers.create.virtual.registry
        virtual: true
        query:
          Image: {{ (datasource "datasources/registry.yaml").image.local }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/registry.yaml").tag }}
          Env:
            - REGISTRY_LOG_ACCESSLOG_DISABLED=false
            - REGISTRY_LOG_FORMATTER=text
            - REGISTRY_LOG_LEVEL=info
            - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY={{ (datasource "datasources/all.yaml").path.opt.data }}
          HostConfig:
            Mounts:
              - <<: *volume
                source: ${REGISTRY_VOLUME}
                target: {{ (datasource "datasources/all.yaml").path.opt.data }}
            ReadonlyRootfs: true
          NetworkingConfig:
            EndpointsConfig:
              {{ (datasource "datasources/networks.yaml").docker_utils.name }}: {}
        depends_on:
          - images.build.registry
          - networks.create.{{ (datasource "datasources/networks.yaml").docker_utils.name }}
          - volumes.create.${REGISTRY_VOLUME}
        extends:
          - containers.create.virtual.base
      - id: containers.create.virtual.sshd
        virtual: true
        query:
          Image: {{ (datasource "datasources/sshd.yaml").image }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
          ExposedPorts:
            - {{ (datasource "datasources/sshd.yaml").port }}/tcp
          HostConfig:
            Mounts:
              - <<: *readonly-volume
                Source: ${SSH_VOLUME}
                Target: {{ (datasource "datasources/all.yaml").path.root.ssh }}
              - <<: *readonly-volume
                Source: ${THEME_VOLUME}
                Target: {{ (datasource "datasources/bash.yaml").path.theme }}
          NetworkingConfig:
            EndpointsConfig:
              {{ (datasource "datasources/networks.yaml").jump_area.name }}: {}
        depends_on:
          - images.build.sshd
          - networks.create.{{ (datasource "datasources/networks.yaml").jump_area.name }}
          - volume.create.${SSH_VOLUME}
          - volume.create.${THEME_VOLUME}
        extends:
          - containers.create.virtual.base
      - id: containers.create.virtual.shell
        virtual: true
        query:
          Image: {{ (datasource "datasources/shell.yaml").image }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
        depends_on:
          - images.build.shell
        extends:
          - containers.create.virtual.sshd
      - id: containers.create.virtual.vim
        virtual: true
        query:
          Image: {{ (datasource "datasources/vim.yaml").image }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
        depends_on:
          - images.build.vim
        extends:
          - containers.create.virtual.sshd
      - id: containers.create.virtual.zig
        virtual: true
        query:
          Image: {{ (datasource "datasources/zig.yaml").image }}{{ (datasource "datasources/all.yaml").sep.tag }}{{ (datasource "datasources/all.yaml").owner.tag }}
        depends_on:
          - images.build.zig
        extends:
          - containers.create.virtual.sshd

...
