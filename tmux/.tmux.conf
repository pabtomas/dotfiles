# Quality of Life {{{1

# setting the delay between prefix and command
set-option -s escape-time 5

# allow arrow keys to be used immediatly after changing window
set-option -g repeat-time 0

# don't rename windows automatically
set-option -g allow-rename off
set-option -g automatic-rename on
set-option -g automatic-rename-format ''

# Enable names for panes
set-option -g pane-border-status top
set-option -g pane-border-format ' [#P] #{s/^.*@//:#{pane_title}} '

# base index
set-option -g base-index 1
set-option -g pane-base-index 1

# status line needs this feature to be functionnal
set-option -g renumber-windows on

# more lines in copy mode
set-option -g history-limit 100000

# }}}
# Mappings {{{1

# bash shortcuts enabled
set-window-option -g xterm-keys on

# `C-q` instead of `C-b`. To use bash `C-q`, use `C-q` + `C-q`
set-option -g prefix C-q
unbind-key C-b
bind-key 'C-q' send-prefix

# open & source .tmux-conf
bind-key -n 'M-&' split-window -h vim ~/.tmux.conf
bind-key -n 'M-é' run-shell 'tmux source ${HOME}/.tmux.conf \
  && tmux display-message -d 3000 "${HOME}/.tmux.conf sourced"'

# tree
unbind-key s
unbind-key w
bind-key -n 'M-§' choose-session -N -Z
bind-key -n 'M-!' run-shell 'tmux choose-tree -N -Z -F \
"#{?#{pane_format},#{s/^.*@//:#{pane_title}},}\
#{?#{window_format},#{window_name},}\
#{?#{session_format},#{session_name},}" \
-f "##{==:##{session_name},#{session_name}}"'

# command prompt
unbind-key :
bind-key -n 'M-:' command-prompt

# keys list
unbind-key ?
bind-key -n 'M-?' list-keys

#   Panes {{{2

# splitting panes
unbind-key %
unbind-key '"'
bind-key -n 'M-d' split-window -h -c '#{pane_current_path}'
bind-key -n 'M-s' split-window -v -c '#{pane_current_path}'

# switching panes
unbind-key Left
unbind-key Right
unbind-key Up
unbind-key Down
bind-key -n 'M-Left' select-pane -L
bind-key -n 'M-Right' select-pane -R
bind-key -n 'M-Up' select-pane -U
bind-key -n 'M-Down' select-pane -D

# swap panes
bind-key -n 'M-m' command-prompt -I "" { swap-pane -t "%%"; select-pane -t "%%" }

# killing panes
unbind-key x
bind-key -n 'M-q' kill-pane

# switching layout
unbind-key Space
bind-key -n 'M-Enter' next-layout

# zooming in/out current pane
unbind-key z
bind-key -n 'M-f' resize-pane -Z

#   }}}
#   Windows {{{2

# new window
unbind-key c
bind-key -n 'M-w' new-window -c '#{pane_current_path}'

# switching window
unbind-key n
unbind-key p
bind-key -n 'M-c' next-window
bind-key -n 'M-x' previous-window

# renaming window
unbind-key ,
bind-key -n 'M-W' command-prompt -I "#W" { rename-window "%%" }

#   }}}
#   Sessions {{{2

# new session
bind-key -n 'M-<' command-prompt -p "(new-session)" \
  "new-session -A -s '%%' -c '#{pane_current_path}'"

# detach session
unbind-key d
bind-key -n 'M-z' detach-client

# rename session
unbind-key $
bind-key -n 'M->' command-prompt -I "#S" { rename-session "%%" }

# dev session
set-environment -g ID 0
bind-key -n 'M-D' command-prompt -p '(new-DEV-session)' {
  new-session -A -s "DEV-%1" -c "#{pane_current_path}"
  send-keys '/opt/scripts/explorer_vim_server.sh ${ID}' ENTER
  split-window -h -b -l 15%
  send-keys '/opt/scripts/explorer_vim_remote.sh ${ID}' ENTER
  select-pane -t 2
  split-window -v -l 20%
  set-environment -g -F ID '#{e|+:#{ID},1}'
}

#   }}}
#   COPY Mode {{{2

# to copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will
# automatically be available in clibboard
set-option -g mouse on
set-window-option -g mode-keys vi

# update default binding of COPY mode to match with VIM visual mode
unbind-key [
unbind-key ]
bind-key -n 'M-v' copy-mode
bind-key -n 'M-o' run-shell 'tmux show-buffer | xsel -i --clipboard'
bind-key -n 'M-p' paste-buffer

# update default binding of visual selection to match with VIM visual mode
unbind-key -T copy-mode-vi v
unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# update default binding of `y` to also use copy-pipe
unbind-key -T copy-mode-vi 'y'
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel

#   }}}
# }}}
# Style {{{1

# enable 256 colors
set-option -g default-terminal xterm-256color

# message style
set-option -g message-style 'fg=colour232,bg=colour42,bold'

# set copy selection style and cursorline selection style
set-window-option -g mode-style 'fg=colour232,bg=colour42,bold'

# set inactive/active panes styles
set-option -g window-style 'fg=colour250'
set-option -g window-active-style 'fg=colour250,bg=colour234'
set-option -g pane-active-border-style 'fg=colour45'

set-option -g pane-border-lines 'heavy'

# statusline
set-option -g status-style 'fg=colour232,bg=colour45,bold'
set-window-option -g status-format[0] '▌#{session_name}\
#{?#{e|==:#{active_window_index},1},▐, }#{W:#{?window_active,\
#[fg=colour45#,bg=colour232]#{?#{e|==:#{window_index},1},,▌}\
#{?#{e|>:#{w:window_name},0},#{window_name},#{s/^.*@//:#{pane_title}}\
}▐,#[fg=colour232#,bg=colour45]\
#{?#{||:#{e|==:#{e|+:#{active_window_index},1},#{window_index}},\
#{e|==:#{window_index},1}},, }\
#{?#{e|>:#{w:window_name},0},#{window_name},#{s/^.*@//:#{pane_title}}\
}}\
}'

# }}}
# Plugins {{{1

set -g @plugin 'tmux-plugins/tmux-resurrect'
bind-key -n 'M-y' run-shell "${HOME}/.tmux/plugins/tmux-resurrect/scripts/save.sh"
bind-key -n 'M-u' run-shell "${HOME}/.tmux/plugins/tmux-resurrect/scripts/restore.sh"
set-hook -g client-detached "run-shell '${HOME}/.tmux/plugins/tmux-resurrect/scripts/save.sh'"
set -g @resurrect-processes 'tig ssh sh /bin/bash'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '0'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# }}}
