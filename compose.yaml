services:
  proxy:
    build:
      context: ./${PROXY}
      args:
        - API_ENDPOINT_NETWORKS=${TRUE}
        - API_ENDPOINT_VERSION=${TRUE}
        - DOCKER_IMG=${DOCKER_IMG}
        - ETC_NGX=/etc/nginx
        - LINUXSERVER_PROXY_IMG=${LINUXSERVER_PROXY_IMG}
        - NET=${JUMP_AREA}
        - OS=${OS}
        - PROXY_PORT=${PROXY_PORT}
        - TMP_NGX=/tmp/nginx
        - SOCKET_PATH=${SOCKET_PATH}
    image: ${PROXY_IMG}
    container_name: ${PROXY}
    hostname: ${PROXY}
    volumes:
      - ${SOCKET_PATH}:${SOCKET_PATH}:ro
      - ${SSH_VOLUME}:${SSH_ROOT}
    networks:
      - ${PROXIFIED_SOCKET}
      - ${JUMP_AREA}
    read_only: true
    tmpfs:
      - /run
  controller:
    build:
      context: ./${CONTROLLER}
      args:
        - BASH_IMG=${BASH_IMG}
        - DOCKER_HOST=tcp://${PROXY}:${PROXY_PORT}
        - DOCKER_IMG=${DOCKER_IMG}
        - NET=${JUMP_AREA}
        - SSH_ROOT=${SSH_ROOT}
    image: ${CONTROLLER_IMG}
    container_name: ${CONTROLLER}
    hostname: ${CONTROLLER}
    volumes:
      - ${SSH_VOLUME}:${SSH_ROOT}
    networks:
      - ${PROXIFIED_SOCKET}
      - ${JUMP_AREA}
  jumper:
    depends_on:
      - ${CONTROLLER}
    build:
      context: ./${JUMPER}
      args:
        - BASH_IMG=${BASH_IMG}
        - CONTROLLER=${CONTROLLER}
        - HOSTNAME=${JUMPER}
        - NET=${JUMP_AREA}
        - OPT_SSH=${OPT_SSH}
    image: ${JUMPER_IMG}
    container_name: ${JUMPER}
    hostname: ${JUMPER}
    volumes:
      - ${SSH_VOLUME}:${OPT_SSH}
    networks:
      - ${JUMP_AREA}
    stdin_open: true
    tty: true

networks:
  proxy_for_controller:
    driver: bridge
    name: ${PROXIFIED_SOCKET}
    ipam:
      driver: default
  jump_area:
    driver: bridge
    name: ${JUMP_AREA}
    ipam:
      driver: default

volumes:
  shared-ssh:
    name: ${SSH_VOLUME}
