---

rules:
  - id: '{{ $rules.up }}'
    run:
      - endpoint: /images/json
        method: GET
        register:
          id: local.alpine.image.json
          query:
            filters: '{"reference":{"{{ $alpine.image.source }}":true}}'
          as:
            id: localalpineimage
      - if: '{{ ne 1 (len $localalpineimage) }}'
        endpoint: /images/create
        method: POST
        loop:
          - id: '{{ $dependencies.images.pull.alpine }}'
            query:
              fromImage: '{{ $alpine.image.source }}'
              tag: '{{ $alpine.tag }}'
            depends_on:
              - local.alpine.image.json
      - endpoint: /images/json
        method: GET
        register:
          id: local.bash.image.json
          query:
            filters: '{"reference":{"{{ $bash.image.source }}":true}}'
          as:
            id: localbashimage
      - if: '{{ ne 1 (len $localbashimage) }}'
        endpoint: /images/create
        method: POST
        loop:
          - id: '{{ $dependencies.images.pull.bash }}'
            query:
              fromImage: '{{ $bash.image.source }}'
              tag: '{{ $bash.tag }}'
            depends_on:
              - local.bash.image.json
      - endpoint: /images/json
        method: GET
        register:
          id: local.buildkit.image.json
          query:
            filters: '{"reference":{"{{ $buildkit.image.source }}":true}}'
          as:
            id: localbuildkitimage
      - if: '{{ ne 1 (len $localbuildkitimage) }}'
        endpoint: /images/create
        method: POST
        loop:
          - id: '{{ $dependencies.images.pull.buildkit }}'
            query:
              fromImage: '{{ $buildkit.image.source }}'
              tag: '{{ $buildkit.tag }}'
            depends_on:
              - local.buildkit.image.json
      - endpoint: /images/json
        method: GET
        register:
          id: local.docker.image.json
          query:
            filters: '{"reference":{"{{ $docker.image.source }}":true}}'
          as:
            id: localdockerimage
      - if: '{{ ne 1 (len $localdockerimage) }}'
        endpoint: /images/create
        method: POST
        loop:
          - id: '{{ $dependencies.images.pull.docker }}'
            query:
              fromImage: '{{ $docker.image.source }}'
              tag: '{{ $docker.tag }}'
            depends_on:
              - local.docker.image.json
      - endpoint: /images/json
        method: GET
        register:
          id: local.registry.image.json
          query:
            filters: '{"reference":{"{{ $registry.image.source }}":true}}'
          as:
            id: localregistryimage
      - if: '{{ ne 1 (len $localregistryimage) }}'
        endpoint: /images/create
        method: POST
        loop:
          - id: '{{ $dependencies.images.pull.registry }}'
            query:
              fromImage: '{{ $registry.image.source }}'
              tag: '{{ $registry.tag }}'
            depends_on:
              - local.registry.image.json
      - endpoint: /images/json
        method: GET
        register:
          id: local.socketproxy.image.json
          query:
            filters: '{"reference":{"{{ $socketproxy.linuxserver.image.source }}":true}}'
          as:
            id: localsocketproxyimage
      - if: '{{ ne 1 (len $localsocketproxyimage) }}'
        endpoint: /images/create
        method: POST
        loop:
          - id: '{{ $dependencies.images.pull.socketproxy }}'
            query:
              fromImage: '{{ $socketproxy.linuxserver.image.source }}'
              tag: '{{ $socketproxy.linuxserver.tag }}'
            depends_on:
              - local.socketproxy.image.json

...
