{
  "rules": [
    {
      "id": "{{ $rules.up }}",
      "run": [
        {
          "endpoint": "/build",
          "method": "POST",
          "loop": [
            {
              "id": "{{ $dependencies.images.build.alpine.entrypoint }}",
              "query": {
                "buildargs": "{\n  \"BASE_IMG\":\"{{ $all.os.image.local }}{{ $all.sep.tag }}{{ $all.os.tag }}\"\n}\n",
                "t": "{{ $entrypointalpine.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "depends_on": [
                "{{ $dependencies.images.tag.alpine }}"
              ],
              "extends": [
                "{{ $dependencies.images.build.virtual.entrypoint }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.bash.entrypoint }}",
              "query": {
                "buildargs": "{\n  \"BASE_IMG\":\"{{ $bash.image.local }}{{ $all.sep.tag }}{{ $bash.tag }}\"\n}\n",
                "t": "{{ $entrypointbash.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "depends_on": [
                "{{ $dependencies.images.tag.bash }}"
              ],
              "extends": [
                "{{ $dependencies.images.build.virtual.entrypoint }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.gpu }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $gpu.id }}.sh\"\n}\n",
                "t": "{{ $gpu.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $gpu.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.alpine.entrypoint }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.linguist }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $linguist.id }}.sh\"\n}\n",
                "t": "{{ $linguist.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $linguist.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.alpine.entrypoint }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.nginx }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $nginx.id }}.sh\",\n  \"ENTRYPOINTD_PATH\":\"{{ $entrypoint.path.entrypoint.d }}\",\n  \"ETC_NGINX_CONFD_PATH\":\"{{ $nginx.path.confd }}\",\n  \"ETC_NGINX_HTTPD_PATH\":\"{{ $nginx.path.httpd }}\",\n  \"VAR_LOG_NGINX_PATH\":\"{{ $nginx.path.var.log }}\"\n}\n",
                "t": "{{ $nginx.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $nginx.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.alpine.entrypoint }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.socat }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $socat.id }}.sh\"\n}\n",
                "t": "{{ $socat.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $socat.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.alpine.entrypoint }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.spectrwm }}",
              "query": {
                "buildargs": "{\n  \"BIN_PATH\":\"{{ $all.path.bin }}\",\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $spectrwm.id }}.sh\"\n}\n",
                "t": "{{ $spectrwm.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $spectrwm.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.alpine.entrypoint }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.http }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $http.id }}.sh\",\n  \"ETC_NGINX_HTTPD_PATH\":\"{{ $nginx.path.httpd }}\",\n  \"ETC_NGINX_PATH\":\"{{ $nginx.path.etc }}\",\n  \"LINUXSERVER_PROXY_LOCAL_IMG\":\"{{ $socketproxy.linuxserver.image.local }}{{ all.sep.tag }}{{ $socketproxy.linuxserver.tag }}\"\n}\n",
                "t": "{{ $http.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $http.id }}",
              "depends_on": [
                "{{ $dependencies.images.tag.socketproxy }}"
              ],
              "extends": [
                "{{ $dependencies.images.build.virtual.nginx }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.bash._ }}",
              "query": {
                "buildargs": "{\n  \"BASH_ALIASES_PATH\":\"{{ $bash.path.aliases }}\",\n  \"BASH_COMPLETION_PATH\":\"{{ $bash.path.completion }}\",\n  \"BASH_ENTRYPOINT_LAYER_IMG\":\"{{ $entrypointbash.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}\",\n  \"BASH_LOCAL_IMG\":\"{{ $bash.image.local }}{{ $all.sep.tag }}{{ $bash.tag }}\",\n  \"BASH_THEME_PATH\":\"{{ $bash.path.theme }}\",\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $bash.id }}.sh\",\n  \"ENTRYPOINT_PATH\":\"{{ $entrypoint.path.entrypoint.sh }}\"\n}\n",
                "t": "{{ $bash.image.layer }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $bash.id }}",
              "depends_on": [
                "{{ $dependencies.images.build.bash.entrypoint }}"
              ],
              "extends": [
                "{{ $dependencies.images.build.virtual._ }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.tmux }}",
              "query": {
                "buildargs": "{\n  \"BASH_COMPLETION_PATH\":\"{{ $bash.path.completion }}\",\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $tmux.id }}.sh\",\n  \"TMUX_COMPLETION_URL\":\"{{ $tmux.url.completion }}\",\n  \"TPM_PATH\":\"{{ $tmux.path.tpm }}\",\n  \"TPM_URL\":\"{{ $tmux.url.tpm }}\"\n}\n",
                "t": "{{ $tmux.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $tmux.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.bash }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.sshd }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $sshd.id }}.sh\",\n  \"ENTRYPOINTD_PATH\":\"{{ $entrypoint.path.entrypoint.d }}\",\n  \"SSH_PORT\":\"{{ $sshd.port }}\"\n}\n",
                "t": "{{ $sshd.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $sshd.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.bash }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.docker }}",
              "query": {
                "buildargs": "{\n  \"_DOCKER_LOCAL_IMG\":\"{{ $docker.image.local }}{{ $all.sep.tag }}{{ $docker.tag }}\",\n  \"_DOCKER_PLUGINS_PATH\":\"{{ docker.path.plugins }}\",\n  \"BIN_PATH\":\"{{ $all.path.bin }}\",\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $docker.id }}.sh\",\n  \"DOCKLE_DOWNLOAD_URL\":\"{{ $dockle.url.download }}\",\n  \"DOCKLE_TAG\":\"{{ $dockle.tag }}\",\n  \"ENTRYPOINTD_PATH\":\"{{ $entrypoint.path.entrypoint.d }}\",\n  \"HTTP_DOCKER_TARGET\":\"{{ $docker.target.http }}\",\n  \"NET\":\"{{ $networks.jump_area.name }}\",\n  \"REGBOT_URL\":\"{{ $docker.url.regbot }}\",\n  \"REGCTL_URL\":\"{{ $docker.url.regctl }}\",\n  \"REGISTRY_TARGET\":\"{{ $registry.target }}\",\n  \"REGSYNC_URL\":\"{{ $docker.url.regsync }}\",\n  \"TCP_BUILDKIT_TARGET\":\"{{ $buildkit.target.tcp }}\",\n  \"TCP_DOCKER_TARGET\":\"{{ $docker.target.tcp }}\",\n  \"XEPHYR_DISPLAY\":\"{{ .Env.XEPHYR_DISPLAY }}\"\n}\n",
                "t": "{{ $docker.image.layer }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $docker.id }}",
              "depends_on": [
                "{{ $dependencies.images.tag.docker }}"
              ],
              "extends": [
                "{{ $dependencies.images.build.virtual.sshd }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.man }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $man.id }}.sh\"\n}\n",
                "t": "{{ $man.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $man.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.sshd }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.pass }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $pass.id }}.sh\"\n}\n",
                "t": "{{ $pass.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $pass.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.sshd }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.workspaces }}",
              "query": {
                "buildargs": "{\n  \"OPT_SCRIPTS_PATH\":\"{{ $all.path.opt.scripts }}\",\n  \"OWNER_URL\":\"{{ $all.owner.url }}\",\n  \"SPACEPORN_ID\":\"{{ $spaceporn.id }}\",\n  \"SSHD_LAYER_IMG\":\"{{ $sshd.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}\",\n  \"WORKSPACES_PATH\":\"{{ $workspaces.path.root }}\"\n}\n",
                "t": "{{ $workspaces.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $workspaces.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.sshd }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.vim }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $vim.id }}.sh\",\n  \"NERDTREE_URL\":\"{{ $vim.url.plugin.nerdtree }}\",\n  \"POLYGLOT_URL\":\"{{ $vim.url.plugin.polyglot }}\",\n  \"RAINBOW_URL\":\"{{ $vim.url.plugin.rainbow }}\",\n  \"UNDOTREE_URL\":\"{{ $vim.url.plugin.undotree }}\"\n}\n",
                "t": "{{ $vim.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $vim.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.workspaces }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.explorer }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $explorer.id }}.sh\"\n}\n",
                "t": "{{ $explorer.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $explorer.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.workspaces }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.git }}",
              "query": {
                "buildargs": "{\n  \"BASH_COMPLETION_PATH\":\"{{ $bash.path.completion }}\",\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $git.id }}.sh\",\n  \"EXPLORER_LAYER_IMG\":\"{{ $explorer.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}\",\n  \"TIG_COMPLETION_URL\":\"{{ $git.url.tig.completion }}\"\n}\n",
                "t": "{{ $git.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $git.id }}",
              "depends_on": [
                "{{ $dependencies.images.build.explorer }}"
              ],
              "extends": [
                "{{ $dependencies.images.build.virtual._ }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.shell }}",
              "query": {
                "buildargs": "{\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $shell.id }}.sh\"\n}\n",
                "t": "{{ $shell.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $shell.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.git }}"
              ]
            },
            {
              "id": "{{ $dependencies.images.build.zig }}",
              "query": {
                "buildargs": "{\n  \"BASH_COMPLETION_PATH\":\"{{ $bash.path.completion }}\",\n  \"BIN_PATH\":\"{{ $all.path.bin }}\",\n  \"CHECK_ENTRYPOINT_PATH\":\"{{ $entrypoint.path.check.d }}/99{{ $zig.id }}.sh\",\n  \"ZIG_BUILDS_URL\":\"{{ $zig.url.builds }}\",\n  \"ZIG_COMPLETION_URL\":\"{{ $zig.url.completion }}\",\n  \"ZIG_TAG\":\"{{ $zig.tag }}\"\n}\n",
                "t": "{{ $zig.image }}{{ $all.sep.tag }}{{ $all.owner.tag }}"
              },
              "context": "{{ $all.path.dockerfiles }}/{{ $zig.id }}",
              "extends": [
                "{{ $dependencies.images.build.virtual.git }}"
              ]
            }
          ]
        }
      ]
    }
  ]
}
